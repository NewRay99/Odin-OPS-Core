parameters:
- name: Stage
- name: PipelineEnvironment

variables:
  - ${{ if eq(parameters.PipelineEnvironment, 'DevTest') }}:
    - group: vg-odin-devTest-core
#  - ${{ if eq(parameters.PipelineEnvironment, 'Test') }}:
#    - group: vg-odin-test-core

jobs:
  - deployment: Deploy${{ parameters.Stage }}
    displayName: Deploy${{ parameters.Stage }}
    environment: ${{ parameters.PipelineEnvironment }}
    strategy:
      runOnce:
        deploy:
          steps:
          - checkout: self
          - task: AzurePowerShell@5
            name: GetSPNObjectId 
            inputs:
              azureSubscription: $(azureSubscriptionSPN)
              scriptType: 'InlineScript'
              inline: |
                $Context = Get-AzContext
                $AzureDevOpsServicePrincipal = Get-AzADServicePrincipal -ApplicationId $Context.Account.Id
                $ObjectId = $AzureDevOpsServicePrincipal.Id
                echo "##vso[task.setvariable variable=SPNObjectId;isOutput=true]$ObjectId"
                $GetTenantId = $Context.Tenant.Id
                echo "##vso[task.setvariable variable=tenantId;isOutput=true]$GetTenantId"
              azurePowerShellVersion: latestVersion
          - task: AzureCLI@2
            displayName: 'deploy bicep template'
            inputs:
              azureSubscription: $(azureSubscriptionSPN)
              scriptType: 'pscore'
              scriptLocation: 'inlineScript'
              inlineScript: |
                az group create --name '$(resourcePrefix)-rg-OPS-core' --location $(location) --tags "Portfolio=Education and Skills Funding Agency" "Service Line=Data Science (CEDD)" "Service=Business Intelligence (CEDD)" "Product=Data Platform Infrastructure" "Environment=Dev" "Service Offering=ESFA Adopt Programme"
                az deployment group create  `
                --template-file main.bicep --parameters $(parameterFile) `
                --parameters  environment=$(TAGenvironment) resourcegroupname='$(resourcePrefix)-rg-OPS-core' objectId=$(GetSPNObjectId.SPNObjectId) tenantId=$(GetSPNObjectId.tenantId) location=$(location) `
                --resource-group '$(resourcePrefix)-rg-OPS-core'

